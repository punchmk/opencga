!define TEST_SYSTEM {slim}
!define file {4}


!3 Generate Random Variables 
!|Table: Rest Fixture | $baseURL |
|let|sName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|sName2|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|sName3|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|createPostName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|updatedName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|iName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||

!3 Create Sample
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$createPostName" }|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/create?sid=$sessionId&study=$studyId |200|  Content-Type: application/json ||
|let|sampleId|js|response.jsonbody.response[0].result[0].id||

!3 Create Second Sample Including Individual And Annotation 
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$sName2", "individual" : {"name":"$iName"}, "annotationSets":[{"name": "string", "variableSet": "$gVariableSetId",  "annotations": {"var_int": "10"}}]}|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/create?sid=$sessionId&study=$studyId |200|  Content-Type: application/json ||
|let|sampleId2|js|response.jsonbody.response[0].result[0].id||
|let|individualId|js|response.jsonbody.response[0].result[0].individual.id||
|let||js|response.jsonbody.response[0].result[0].annotationSets[0].annotations[1].value|10|

!3 (Negative) Create Sample Including Individual And Annotation With Invalid Variable Set 
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$sName3", "individual" : {"name":"$iName"}, "annotationSets":[{"name": "string", "variableSet": "variableSetId",  "annotations": {"var_int": "10"}}]}|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/create?sid=$sessionId&study=$studyId |500|  Content-Type: application/json ||

!3 (Negative) Create Sample Including Annotation With Missing Mandatory Variable
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$sName3", "individual" : {"name":"$iName"}, "annotationSets":[{"name": "string", "variableSet": "$gVariableSetId",  "annotations": {"var_double": "100.5"}}]}|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/create?sid=$sessionId&study=$studyId |500|  Content-Type: application/json |jsonbody.error == 'Missing required variable var_int'|

!3 Get Sample 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$sampleId'|

!3 Get Individual 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$individualId/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$individualId'|

!3 Update Sample (POST)
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$updatedName" }|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/$sampleId/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].name == '$updatedName'|

!3 Get Sample 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].name == '$updatedName'|

!3 Get Samples as Groups
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/groupBy?sid=$sessionId&study=$studyId&fields=name%2Csource&limit=5|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].numResults > '0' && jsonbody.response[0].result[0]._id.name != ''|

!3 Get Sample ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId/acl?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result ==''|

!3 Create Sample ACL
!|Table: Rest Fixture | $baseURL |
|setBody|{"permissions": "DELETE", "action":"SET", "sample": "$sampleId"}|
|setHeader|Content-Type:application/json|
|POST| /v1/samples/acl/$userA/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'DELETE'|

!3 Update Sample ACL (add)
!|Table: Rest Fixture | $baseURL |
|setBody|{"add": "VIEW"}|
|setHeader|Content-Type:application/json|
|POST| /v1/samples/$sampleId/acl/$userA/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW'|

!3 Update Sample ACL (remove)
!|Table: Rest Fixture | $baseURL |
|setBody|{"remove": "DELETE"}|
|setHeader|Content-Type:application/json|
|POST| /v1/samples/$sampleId/acl/$userA/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW'|

!3 Update Sample ACL (set)
!|Table: Rest Fixture | $baseURL |
|setBody|{"set": "SHARE"}|
|setHeader|Content-Type:application/json|
|POST| /v1/samples/$sampleId/acl/$userA/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].permissions.length == '1'|

!3 Get Member ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId/acl?sid=$sessionId&member=$userA|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length > '0'|

!3 DELETE Member ACL
!|Table: Rest Fixture | $baseURL |
| setBody | {    "action": "RESET",  "sample": "$sampleId" }|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/acl/$userA/update?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].id == '$sampleId' && jsonbody.response[0].result.length == '0'|

# Once we have Deleted Return Object, replace the above line with following line
#| GET | /v1/samples/$sampleId/acl/$userA/delete?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '0'|

!3 Get Member ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId/acl?sid=$sessionId&member=$userA|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '0'|

!3 Update (SET) ACL Individual And Propagate to Sample 2
!|Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "SHARE", "action": "SET", "individual" : "$individualId" , "propagate" : "true"}|
| setHeader|Content-Type:application/json|
| POST | /v1/individuals/acl/$userA/update?sid=$sessionId&study=$studyId |200|  Content-Type: application/json ||

!3 Get Member ACL From Sample 2
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId2/acl?sid=$sessionId&member=$userA|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '1.0'|

!3 DELETE Member ACL For Sample 2
!|Table: Rest Fixture | $baseURL |
| setBody | {    "action": "RESET",  "sample": "$sampleId2" }|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/acl/$userA/update?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].id == '$sampleId2' && jsonbody.response[0].result.length == '0'|

!3 Get Member ACL From Sample 2
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId2/acl?sid=$sessionId&member=$userA|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '0'|

!3 Login user B 
!|Table: Rest Fixture | $baseURL  |
| setBody | {"password" : "p@ssword"}|
| setHeader|Content-Type:application/json|
| POST | /v1/users/$userB/login |200|  Content-Type: application/json ||
|let|userBSessionId|js|response.jsonbody.response[0].result[0].sessionId||

!3 Get Sample 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId2/info?sid=$userBSessionId|403|  Content-Type: application/json |jsonbody.error == 'User $userB does not have any permissions in study $study'|

!3 Update Sample ACL (add)
!|Table: Rest Fixture | $baseURL |
|setBody|{"add": "VIEW"}|
|setHeader|Content-Type:application/json|
|POST| /v1/samples/$sampleId2/acl/$userB/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW'|

!3 Get Sample (Annotation Set MUST NOT Present)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId2/info?sid=$userBSessionId|200|  Content-Type: application/json ||

!3 Update Sample ACL (add)
!|Table: Rest Fixture | $baseURL |
|setBody|{"add": "VIEW_ANNOTATIONS"}|
|setHeader|Content-Type:application/json|
|POST| /v1/samples/$sampleId2/acl/$userB/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].permissions.length == '2'|

!3 Get Sample (Annotation Set MUST Present)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId2/info?sid=$userBSessionId|200|  Content-Type: application/json ||

!3 Update Variable Set - Confidential True
!|Table: Rest Fixture  | $baseURL |
| setBody |  {"description": "true"}|
| setHeader|Content-Type:application/json|
| POST | /v1/variableset/$gVariableSetId/update?sid=$sessionId&study=$studyId |200| Content-Type : application/json||

!3 Get Sample (Annotation Set MUST NOT Present)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId2/info?sid=$userBSessionId|200|  Content-Type: application/json ||


!3 Update (SET) ACL Sample 2 And Connecting Individual
!|Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "SHARE", "action": "SET", "sample" : "$sampleId2"}|
| setHeader|Content-Type:application/json|
| POST | /v1/samples/acl/$userA/update?sid=$sessionId&study=$studyId |200|  Content-Type: application/json ||

!3 Get Member ACL (Individual)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$individualId/acl?sid=$sessionId&member=$userA|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '1.0' && jsonbody.response[0].result[0].permissions[0] == 'SHARE'|

!3 Search Sample (All With Limit)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/search?sid=$sessionId&study=$studyId&limit=5|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length > '0'|

!3 Search Sample (Include With Limit)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/search?sid=$sessionId&study=$studyId&limit=5&include=name|200|  Content-Type: application/json | jsonbody.response[0].result[0].name != ''|

!3 Search Sample (Exclude With Limit)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/search?sid=$sessionId&study=$studyId&limit=5&exclude=name|200|  Content-Type: application/json |jsonbody.response[0].result[0].name != 'exclude'|

!3 Search Sample (one)
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/search?sid=$sessionId&study=$studyId&name=$updatedName|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '1' && jsonbody.response[0].result[0].name == '$updatedName'|

!3 Search Sample With Count
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/search?sid=$sessionId&study=$studyId&count=true|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].numTotalResults > '0'|

!3 Delete Sample
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/$sampleId/delete?sid=$sessionId&study=$studyId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$sampleId'|

!3 Delete Individual
!|Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$individualId/delete?sid=$sessionId&study=$studyId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$individualId'|

!3 Search Deleted Sample 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/samples/search?sid=$sessionId&study=$studyId&name=$sampleId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '0'|

